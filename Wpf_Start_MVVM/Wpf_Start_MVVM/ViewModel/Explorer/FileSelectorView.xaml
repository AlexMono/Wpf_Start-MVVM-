<UserControl
    x:Class="Wpf_Start_MVVM.ViewModel.Explorer.FileSelectorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Wpf_Start_MVVM.ViewModel.Explorer"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:traduction="clr-namespace:Wpf_Start_MVVM.Traductions"
    Width="800"
    Height="500"
    mc:Ignorable="d">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <SolidColorBrush x:Key="GlyphBrush" Color="#838383" />
        <Style x:Key="LittleExpanderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid
                            Width="15"
                            Height="13"
                            Background="Transparent">
                            <Path
                                x:Name="ExpandPath"
                                Margin="1,1,1,1"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Data="M 4 0 L 8 4 L 4 8 Z"
                                Fill="{StaticResource GlyphBrush}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ExpandPath" Property="Data" Value="M 0 4 L 8 4 L 4 8 Z" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="TreeViewItemTemplate" TargetType="{x:Type TreeViewItem}">
            <DockPanel>
                <Grid
                    Height="20"
                    Background="#272727"
                    DockPanel.Dock="Top">
                    <Border
                        x:Name="Border"
                        Margin="-150,0,0,0"
                        HorizontalAlignment="Stretch"
                        Background="#272727" />
                    <DockPanel x:Name="Header">
                        <ToggleButton
                            x:Name="Expander"
                            Margin="3,0,0,0"
                            VerticalAlignment="Center"
                            ClickMode="Press"
                            DockPanel.Dock="Left"
                            Foreground="{StaticResource ForegroundLightBrush}"
                            IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                            Style="{StaticResource LittleExpanderStyle}" />
                        <Path
                            x:Name="Arrow"
                            Width="14"
                            Height="14"
                            Margin="5,0,0,0"
                            Data="M0,0L342.809,0 391.765,117.146 785,117.146 783.532,609 0,609z"
                            DockPanel.Dock="Left"
                            Fill="#F8D777"
                            Stretch="Uniform" />
                        <ContentPresenter
                            x:Name="headerText"
                            Margin="5,0,0,0"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Header}" />

                    </DockPanel>
                </Grid>
                <ItemsPresenter Margin="20,0,0,0" Visibility="{TemplateBinding IsExpanded, Converter={StaticResource BoolToVisibilityConverter}}" />
            </DockPanel>
            <ControlTemplate.Triggers>
                <Trigger Property="HasItems" Value="False">
                    <Trigger.Setters>
                        <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                    </Trigger.Setters>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="#C8C8C8" />
                    <Setter TargetName="Arrow" Property="Fill" Value="#FFE9A1" />
                    <Setter TargetName="headerText" Property="TextBlock.Foreground" Value="Black" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="{x:Type TreeViewItem}">
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=OneWayToSource}" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Template" Value="{StaticResource TreeViewItemTemplate}" />
        </Style>


        <DataTemplate DataType="{x:Type local:DirectoryItemViewModel}">
            <DockPanel>
                <TextBlock
                    DockPanel.Dock="Top"
                    Foreground="{StaticResource ForegroundLightBrush}"
                    Text="{Binding Libelle}" />
            </DockPanel>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:FileItemViewModel}">
            <DockPanel>
                <TextBlock
                    DockPanel.Dock="Top"
                    Foreground="{StaticResource ForegroundLightBrush}"
                    Text="{Binding Libelle}" />
            </DockPanel>
        </DataTemplate>

        <Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Padding" Value="5,0" />
            <Setter Property="Height" Value="20" />
            <Setter Property="BorderThickness" Value="0,1,1,1" />
            <Setter Property="BorderBrush" Value="LightGray" />
        </Style>
    </UserControl.Resources>


    <Grid Background="#272727">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" MinWidth="250" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="10" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <ItemsControl
            Grid.Row="0"
            Grid.Column="1"
            Margin="0,10"
            BorderBrush="LightGray"
            BorderThickness="1"
            Foreground="{StaticResource ForegroundLightBrush}"
            ItemsSource="{Binding Breadcrumb}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Path
                            Width="8"
                            Height="8"
                            Margin="6,0"
                            VerticalAlignment="Center"
                            Data="M74.9050602287857,0L284.924011644801,235.649597167969 74.8450321526138,471.831024169922 0,387.655303955078 133.541138109645,237.529968261719 0.886025187453441,83.2672348022461z"
                            Fill="LightGray"
                            Stretch="Uniform" />
                        <Button
                            Height="20"
                            Command="{Binding DataContext.BreadcrumbCommand, ElementName=self}"
                            CommandParameter="{Binding}"
                            Foreground="{StaticResource ForegroundLightBrush}">
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="border">
                                        <TextBlock
                                            Margin="3"
                                            VerticalAlignment="Center"
                                            Foreground="{StaticResource ForegroundLightBrush}"
                                            Text="{Binding Libelle}" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="#D3F0B4" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>

                    </StackPanel>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <TreeView
            x:Name="TreeExplorer"
            Grid.Row="1"
            Grid.Column="0"
            Width="200"
            MinWidth="250"
            Margin="0,0,10,0"
            Background="Transparent"
            BorderThickness="0"
            ItemsSource="{Binding Directories, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}"
            MouseDoubleClick="TreeView_MouseDoubleClick">
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Directories}">
                    <TextBlock Foreground="{StaticResource ForegroundLightBrush}" Text="{Binding Libelle}" />
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>


        <DataGrid
            Grid.Row="1"
            Grid.Column="1"
            HorizontalAlignment="Stretch"
            AutoGenerateColumns="False"
            Background="Transparent"
            BorderBrush="LightGray"
            BorderThickness="1,0,0,1"
            ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle}"
            Foreground="{StaticResource ForegroundLightBrush}"
            GridLinesVisibility="None"
            IsReadOnly="True"
            ItemsSource="{Binding SelectedDirectory.Files}"
            RowHeaderWidth="0"
            SelectedItem="{Binding SelectedFile, Mode=TwoWay}">
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="Transparent" />
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTextColumn
                    Width="*"
                    Binding="{Binding Libelle}"
                    Header="{x:Static traduction:ResApplication.Name}" />
                <DataGridTextColumn
                    Width="auto"
                    Binding="{Binding Size}"
                    Header="{x:Static traduction:ResApplication.Size}" />
                <DataGridTextColumn
                    Width="120"
                    Binding="{Binding Date}"
                    Header="{x:Static traduction:ResApplication.Date}" />
            </DataGrid.Columns>
        </DataGrid>

        <DockPanel
            Grid.Row="2"
            Grid.Column="1"
            Margin="0,10,0,10"
            Background="Transparent">
            <Grid Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
            </Grid>
            <TextBox
                Grid.Column="0"
                MinWidth="400"
                Background="Transparent"
                Foreground="{StaticResource ForegroundLightBrush}"
                IsEnabled="{Binding AllowEditFileName}"
                Text="{Binding SelectedText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Button
                Grid.Column="1"
                Width="80"
                Background="#282828"
                Click="Button_Click"
                Content="{x:Static traduction:ResApplication.Valid}"
                FontSize="15"
                Foreground="{StaticResource ForegroundLightBrush}" />
        </DockPanel>
    </Grid>
</UserControl>
